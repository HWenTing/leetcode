package T_301_400;

public class T390 {

//	给定一个从1 到 n 排序的整数列表。
//	首先，从左到右，从第一个数字开始，每隔一个数字进行删除，直到列表的末尾。
//	第二步，在剩下的数字中，从右到左，从倒数第一个数字开始，每隔一个数字进行删除，直到列表开头。
//	我们不断重复这两步，从左到右和从右到左交替进行，直到只剩下一个数字。
//	返回长度为 n 的列表中，最后剩下的数字。

//	一开始向模拟过程来做，但是空间可能会爆掉。
//	找规律吧
//	left(n)表示从左往右去除	right(n)表示从右往左去除
//	因为试对称的位置 很容易得到 left(n)+right(n)=n+1
//	然后可以观察到 left(n) = 2*right(n/2)  right(n) = 2*left(n/2)
//		left(n)+2*left(n/2)=n+1  --> left(n) = 2*(n/2 + 1 - left(n/2));
//	在等于1的时候特殊处理一下
	
    public int lastRemaining(int n) {
    	return n == 1 ? 1 : 2 * (n / 2 + 1 - lastRemaining(n / 2));
    }
    
    
}
